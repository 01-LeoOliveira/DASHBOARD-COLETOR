generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model associacao {
  id                     String      @id @default(uuid()) // Modificado para gerar UUID automaticamente
  funcionarioMatricula   String
  equipamentoNumeroSerie String
  dataAssociacao         DateTime    @default(now())
  equipamento            equipamento @relation(fields: [equipamentoNumeroSerie], references: [numeroSerie], map: "Associacao_equipamentoNumeroSerie_fkey")
  funcionario            funcionario @relation(fields: [funcionarioMatricula], references: [matricula], map: "Associacao_funcionarioMatricula_fkey")

  @@unique([funcionarioMatricula, equipamentoNumeroSerie], map: "Associacao_funcionarioMatricula_equipamentoNumeroSerie_key")
  @@index([equipamentoNumeroSerie], map: "Associacao_equipamentoNumeroSerie_fkey")
}

model equipamento {
  numeroSerie String       @id
  nome        String
  associacao  associacao[]
  historico   historico[]
}

model funcionario {
  matricula  String       @id
  nome       String
  setor      String
  turno      String
  associacao associacao[]
  historico  historico[]
}

model historico {
  id                     Int         @id @default(autoincrement())
  funcionarioMatricula   String
  equipamentoNumeroSerie String
  acao                   String
  dataAcao               DateTime    @default(now())
  equipamento            equipamento @relation(fields: [equipamentoNumeroSerie], references: [numeroSerie], map: "Historico_equipamentoNumeroSerie_fkey")
  funcionario            funcionario @relation(fields: [funcionarioMatricula], references: [matricula], map: "Historico_funcionarioMatricula_fkey")

  @@index([equipamentoNumeroSerie], map: "Historico_equipamentoNumeroSerie_fkey")
  @@index([funcionarioMatricula], map: "Historico_funcionarioMatricula_fkey")
}